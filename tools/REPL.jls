
(||
    (macrocall
        @isdefined
        JuLISP)
    (call
        include
        "../src/JuLISP.jl"))

(import
    (:
        (.
            .
            JuLISP)
        (.
            sexpr2expr)
        (.
            str2sexpr)
        (.
            str2sexpr_atom)))

(macrocall
    (.
        Core
        (quote
            @doc))
    "尝试估值成S-表达式/原始值\n- 应用：判断用户「是否要输入多行字符串」，兼容直接输入原始值（符号等）的做法\n"
    (function
        (call
            try_evaluate
            (::
                s
                AbstractString))
        (block
            (try
                (block
                    (return
                        (call
                            str2sexpr
                            s)))
                false
                (block
                    ))
            (||
                (call
                    ===
                    (call
                        count
                        '('
                        s)
                    (call
                        count
                        ')'
                        s))
                (return
                    nothing))
            (try
                (block
                    (return
                        (ref
                            (call
                                str2sexpr_atom
                                s)
                            1)))
                false
                (block
                    ))
            (return
                nothing))))

(function
    (call
        JuLISP_REPL
        (kw
            (::
                eval_F
                Function)
            (.
                Main
                (Q
                    eval))))
    (block
        (local
            (=
                (::
                    input
                    String)
                ""))
        (local
            (::
                s_expr
                Any))
        (local
            (::
                result
                Any))
        (while
            true
            (block
                (try
                    (block
                        (call
                            printstyled
                            (parameters
                                (kw
                                    color
                                    (Q
                                        light_blue))
                                (kw
                                    bold
                                    true))
                            (if
                                (call
                                    isempty
                                    input)
                                "julisp> "
                                "      | "))
                        (*=
                            input
                            (call
                                *
                                (call
                                    readline
                                    stdin)
                                '\n'))
                        (=
                            s_arr
                            (call
                                try_evaluate
                                input))
                        (if
                            (call
                                ===
                                (macrocall
                                    @inbounds
                                    (ref
                                        input
                                        1))
                                '\n')
                            (block
                                (call
                                    println)
                                (=
                                    input
                                    "")
                                (continue
                                    )))
                        (||
                            (call
                                isnothing
                                s_arr)
                            (block
                                (try
                                    (block
                                        (=
                                            result
                                            (call
                                                |>
                                                (if
                                                    (call
                                                        isa
                                                        s_arr
                                                        Vector)
                                                    (call
                                                        sexpr2expr
                                                        s_arr)
                                                    s_arr)
                                                eval_F))
                                        (||
                                            (call
                                                isnothing
                                                result)
                                            (block
                                                (call
                                                    show
                                                    stdout
                                                    "text/plain"
                                                    result)
                                                (call
                                                    println)))
                                        (call
                                            println))
                                    e
                                    (block
                                        (call
                                            (.
                                                Base
                                                (Q
                                                    printstyled))
                                            (parameters
                                                (kw
                                                    color
                                                    (Q
                                                        red))
                                                (kw
                                                    bold
                                                    true))
                                            "ERROR: ")
                                        (call
                                            (.
                                                Base
                                                (Q
                                                    showerror))
                                            stdout
                                            e)
                                        (call
                                            (.
                                                Base
                                                (Q
                                                    show_backtrace))
                                            stdout
                                            (call
                                                (.
                                                    Base
                                                    (Q
                                                        catch_backtrace))))
                                        (call
                                            println)))
                                (=
                                    input
                                    ""))))
                    e
                    (block
                        (if
                            (call
                                isa
                                e
                                InterruptException)
                            (block
                                (=
                                    input
                                    "")
                                (call
                                    println))
                            (block
                                (call
                                    rethrow
                                    e)))))))))

(call
    JuLISP_REPL)